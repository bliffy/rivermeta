*******************************************************************************
RiverMeta -- a lightweight streaming metadata processor
*******************************************************************************

Copyright 2018 Michael E. Jolley

Updated July 2024
Released under MIT License

RiverMeta is a cross-platform event-at-a-time architecture, forked from
Waterslide-LTS, for processing metadata. It is designed to take in a set of
streaming events from multiple sources, process them through a set of modules
("kids"/"procs"), and return meaningful outputs.
The user specifies a directed processing graph ("pipeline") of procs used to
process data, both raw content (e.g., files, binary structures) and metadata 
about content. Procs can be filters, aggregators, annotators, decoders,
translators, and collectors. Code is only executed when data is made available
to each individual operator.

RiverMeta can be used as a streaming MapReduce framework for complex event
processing. It is designed to efficiently process data by minimizing copies,
grouping data, and reusing memory. It contains specially designed data
structures intended to explore event correlation on a massive scale with data
that is fragmented across process and systems. As with most stream processing
frameworks, many RiverMeta processing functions favor efficient approximate
computation over less-efficient exact computations.

RiverMeta can be used for a variety of purposes. It is used to generate
interesting metadata from live data streams.

Key Features:
     * processing graph built at execution via command line or config file
     * processing graph can have feedback loops
     * zero-copy data processing, multiple "in flight" references to data
     * generic processing functions that can work on any datatype
     * anything that can be hashed can be used as a key for tracking state
     * simple plug-in style development model
     * built to handle text and binary metadata types
     * expiring data structures for state tracking
     * capable of reading from multiple sources
     * Graphviz visualization of processing graph
     * dynamic by-label sub-selection of data
     * data garbage collection/reuse

This project is one of a number of independent projects built on or derived
from the core used by Waterslide-LTS. If/when we become aware of other such
variants being made available, we will attempt to update the following list.

Related family of products:
   Waterslide - https://github.com/waterslideLTS/waterslide
   RiverMeta - https://github.com/bliffy/rivermeta

